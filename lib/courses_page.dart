import 'package:flutter/material.dart';
import 'api_service.dart';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç–∞ –∏–∑ –¥–∏–∑–∞–π–Ω-–∫–æ–Ω—Ü–µ–ø—Ü–∏–∏
const Color primaryColor = Color(0xFFFFB74D); // –ú—è–≥–∫–∏–π –û—Ä–∞–Ω–∂–µ–≤—ã–π (–Ø–Ω—Ç–∞—Ä–Ω—ã–π)
const Color secondaryColor = Color(0xFF66BB6A); // –°–≤–µ—Ç–ª—ã–π –ó–µ–ª–µ–Ω—ã–π (–¥–ª—è —Ñ–æ–Ω–∞/—Å—Ç–∞—Ç—É—Å–∞)
const Color textColor = Color(0xFF424242); // –¢–µ–º–Ω–æ-–°–µ—Ä—ã–π
const Color backgroundColor = Color(0xFFFAFAFA); // –°–≤–µ—Ç–ª–æ-–°–µ—Ä—ã–π —Ñ–æ–Ω

class CoursesPage extends StatefulWidget {
  const CoursesPage({super.key});

  @override
  State<CoursesPage> createState() => _CoursesPageState();
}

class _CoursesPageState extends State<CoursesPage> {
  late Future<List<dynamic>> courses;
  int _selectedIndex = 1; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º "–ö—É—Ä—Å—ã" –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω—ã–π –ø—É–Ω–∫—Ç

  @override
  void initState() {
    super.initState();
    courses = ApiService.getCourses();
  }

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });

    switch (index) {
      case 0: Navigator.pushNamed(context, '/home'); break;
      case 1: break; // –ö—É—Ä—Å—ã (—Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
      case 2: Navigator.pushNamed(context, '/profile'); break;
      case 3: Navigator.pushNamed(context, '/login'); break;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: backgroundColor,
      appBar: AppBar(
        title: const Text(
          "–ö–∞—Ç–∞–ª–æ–≥ –ö—É—Ä—Å–æ–≤",
          style: TextStyle(color: textColor, fontWeight: FontWeight.bold),
        ),
        backgroundColor: Colors.white,
        elevation: 1,
        iconTheme: const IconThemeData(color: textColor),
        // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞/—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        actions: [
          IconButton(
            icon: const Icon(Icons.filter_list, color: primaryColor),
            onPressed: () {
              // –õ–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            },
          ),
        ],
      ),

      // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π BottomNavigationBar
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _selectedIndex,
        onTap: _onItemTapped,
        selectedItemColor: primaryColor, // –ê–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç - –Ø–Ω—Ç–∞—Ä–Ω—ã–π
        unselectedItemColor: Colors.grey.shade600, // –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç - –°–µ—Ä—ã–π
        backgroundColor: Colors.white,
        type: BottomNavigationBarType.fixed, // –ò—Å–ø–æ–ª—å–∑—É–µ–º fixed –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
        items: const [
          BottomNavigationBarItem(icon: Icon(Icons.home_outlined), label: "–ì–ª–∞–≤–Ω–æ–µ"),
          BottomNavigationBarItem(icon: Icon(Icons.book_outlined), label: "–ö—É—Ä—Å—ã"),
          BottomNavigationBarItem(icon: Icon(Icons.person_outline), label: "–ü—Ä–æ—Ñ–∏–ª—å"),
          BottomNavigationBarItem(icon: Icon(Icons.exit_to_app), label: "–í—ã–π—Ç–∏"),
        ],
      ),

      // –¢–µ–ª–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤
      body: FutureBuilder<List<dynamic>>(
        future: courses,
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return const Center(child: CircularProgressIndicator(color: primaryColor));
          }
          if (snapshot.hasError) {
            return Center(
              child: Padding(
                padding: const EdgeInsets.all(30.0),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    const Icon(Icons.signal_wifi_off, size: 40, color: Colors.redAccent),
                    const SizedBox(height: 10),
                    Text(
                      "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${snapshot.error}",
                      textAlign: TextAlign.center,
                      style: const TextStyle(color: textColor),
                    ),
                  ],
                ),
              ),
            );
          }

          final data = snapshot.data!;
          if (data.isEmpty) {
            return const Center(
              child: Text(
                "–ö—É—Ä—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã üò•",
                style: TextStyle(color: textColor, fontSize: 16),
              ),
            );
          }
          
          return ListView.builder(
            padding: const EdgeInsets.all(12),
            itemCount: data.length,
            itemBuilder: (context, index) {
              final course = data[index];
              return _CourseCard(course: course);
            },
          );
        },
      ),
    );
  }
}

// –û—Ç–¥–µ–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç –¥–ª—è —Å—Ç–∏–ª—å–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –∫—É—Ä—Å–∞
class _CourseCard extends StatelessWidget {
  final dynamic course;

  const _CourseCard({required this.course});

  @override
  Widget build(BuildContext context) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–≥–ª—É—à–∫–∏, –µ—Å–ª–∏ –Ω–µ—Ç
    final imageUrl = course["image"] ?? 'https://via.placeholder.com/600x400.png?text=Course+Image';
    final String category = course["category"] ?? "–û–±—â–µ–µ";

    return Card(
      margin: const EdgeInsets.symmetric(vertical: 8, horizontal: 4),
      elevation: 4, // –ö—Ä–∞—Å–∏–≤–∞—è —Ç–µ–Ω—å
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(16), // –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ –∫—Ä–∞—è
      ),
      child: InkWell(
        onTap: () {
          Navigator.pushNamed(
            context,
            '/course',
            arguments: course,
          );
        },
        borderRadius: BorderRadius.circular(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∑–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–º–∏ –≤–µ—Ä—Ö–Ω–∏–º–∏ —É–≥–ª–∞–º–∏
            ClipRRect(
              borderRadius: const BorderRadius.only(
                topLeft: Radius.circular(16),
                topRight: Radius.circular(16),
              ),
              child: Image.network(
                imageUrl,
                height: 150,
                width: double.infinity,
                fit: BoxFit.cover,
                // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                errorBuilder: (context, error, stackTrace) {
                  return Container(
                    height: 150,
                    color: Colors.grey.shade300,
                    child: const Center(
                      child: Icon(Icons.image_not_supported_outlined, size: 50, color: Colors.grey),
                    ),
                  );
                },
              ),
            ),
            
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  // –ö–∞—Ç–µ–≥–æ—Ä–∏—è (–º–∞–ª–µ–Ω—å–∫–∏–π —Ç–µ–≥)
                  Container(
                    padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
                    decoration: BoxDecoration(
                      color: primaryColor.withOpacity(0.15),
                      borderRadius: BorderRadius.circular(8),
                    ),
                    child: Text(
                      category,
                      style: const TextStyle(
                        color: primaryColor,
                        fontWeight: FontWeight.bold,
                        fontSize: 12,
                      ),
                    ),
                  ),
                  const SizedBox(height: 8),

                  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫—É—Ä—Å–∞
                  Text(
                    course["title"] ?? "–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞",
                    maxLines: 2,
                    overflow: TextOverflow.ellipsis,
                    style: const TextStyle(
                      fontSize: 18,
                      fontWeight: FontWeight.bold,
                      color: textColor,
                    ),
                  ),
                  const SizedBox(height: 6),

                  // –û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞
                  Text(
                    course["description"] ?? "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.",
                    maxLines: 3,
                    overflow: TextOverflow.ellipsis,
                    style: TextStyle(
                      fontSize: 14,
                      color: textColor.withOpacity(0.7),
                    ),
                  ),
                  const SizedBox(height: 10),

                  // –ö–Ω–æ–ø–∫–∞ –∏–ª–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å)
                  Row(
                    mainAxisAlignment: MainAxisAlignment.end,
                    children: [
                      Text(
                        '–ü–æ–¥—Ä–æ–±–Ω–µ–µ ->',
                        style: TextStyle(
                          color: secondaryColor.withOpacity(0.9),
                          fontWeight: FontWeight.w600,
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}